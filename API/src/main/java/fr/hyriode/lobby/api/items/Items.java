package fr.hyriode.lobby.api.items;

public enum Items {

    /**
     * Building blocks
     */

    //Dirt part
    DIRT("DIRT"),
    GRASS("GRASS"),
    COARSE_DIRT(DIRT, 1),
    PODZOL(DIRT, 2),
    MYCELIUM("MYCEL"),

    //Stone part
    STONE("STONE"),
    GRANITE(STONE, 1),
    DIORITE(STONE, 3),
    ANDESITE(STONE, 5),
    POLISHED_GRANITE(STONE, 2),
    POLISHED_DIORITE(STONE, 4),
    POLISHED_ANDESITE(STONE, 6),
    COBBLESTONE("COBBLESTONE"),
    MOSSY_COBBLESTONE("MOSSY_COBBLESTONE"),
    STONE_BRICKS("SMOOTH_BRICK"),
    MOSSY_STONE_BRICKS(STONE_BRICKS, 1),
    CRACKED_STONE_BRICKS(STONE_BRICKS, 2),
    CHISELED_STONE_BRICKS(STONE_BRICKS, 3),
    STONE_SLAB("STEP"),
    COBBLESTONE_SLAB(STONE_SLAB, 3),
    STONE_BRICKS_SLAB(STONE_SLAB, 5),
    DOUBLE_STONE_SLAB("DOUBLE_STEP"),
    DOUBLE_COBBLESTONE_SLAB(DOUBLE_STONE_SLAB, 3),
    DOUBLE_STONE_BRICKS_SLAB(DOUBLE_STONE_SLAB, 5),
    SMOOTH_DOUBLE_STONE_SLAB(DOUBLE_STONE_SLAB, 8),
    COBBLESTONE_STAIRS("COBBLESTONE_STAIRS"),
    STONE_BRICK_STAIRS("SMOOTH_STAIRS"),
    COBBLESTONE_WALL("COBBLE_WALL"),
    MOSSY_COBBLESTONE_WALL(COBBLESTONE_WALL, 1),

    //Ores part
    GOLD_ORE("GOLD_ORE"),
    IRON_ORE("IRON_ORE"),
    COAL_ORE("COAL_ORE"),
    LAPIS_ORE("LAPIS_ORE"),
    REDSTONE_ORE("REDSTONE_ORE"),
    DIAMOND_ORE("DIAMOND_ORE"),
    EMERALD_ORE("EMERALD_ORE"),
    GOLD_BLOCK("GOLD_BLOCK"),
    IRON_BLOCK("IRON_BLOCK"),
    LAPIS_BLOCK("LAPIS_BLOCK"),
    DIAMOND_BLOCK("DIAMOND_BLOCK"),
    EMERALD_BLOCK("EMERALD_BLOCK"),

    //Woods part
    OAK_LOG("LOG"),
    SPRUCE_LOG(OAK_LOG, 1),
    BIRCH_LOG(OAK_LOG, 2),
    JUNGLE_LOG(OAK_LOG, 3),
    OAK_PLANKS("WOOD"),
    SPRUCE_PLANKS(OAK_PLANKS, 1),
    BIRCH_PLANKS(OAK_PLANKS, 2),
    JUNGLE_PLANKS(OAK_PLANKS, 3),
    ACACIA_PLANKS(OAK_PLANKS, 4),
    DARK_OAK_PLANKS(OAK_PLANKS, 5),
    OAK_SLAB("WOOD_STEP"),
    SPRUCE_SLAB(OAK_SLAB, 1),
    BIRCH_SLAB(OAK_SLAB, 2),
    JUNGLE_SLAB(OAK_SLAB, 3),
    ACACIA_SLAB(OAK_SLAB, 4),
    DARK_OAK_SLAB(OAK_SLAB, 5),
    DOUBLE_OAK_SLAB(DOUBLE_STONE_SLAB, 2),
    OAK_STAIRS("WOOD_STAIRS"),
    SPRUCE_STAIRS("SPRUCE_WOOD_STAIRS"),
    BIRCH_STAIRS("BIRCH_WOOD_STAIRS"),
    JUNGLE_STAIRS("JUNGLE_WOOD_STAIRS"),
    OAK_SAPLING("SAPLING"),
    SPRUCE_SAPLING(OAK_SAPLING, 1),
    BIRCH_SAPLING(OAK_SAPLING, 2),
    JUNGLE_SAPLING(OAK_SAPLING, 3),
    ACACIA_SAPLING(OAK_SAPLING, 4),
    DARK_OAK_SAPLING(OAK_SAPLING, 5),
    OAK_LEAVES("LEAVES"),
    SPRUCE_LEAVES(OAK_LEAVES, 1),
    BIRCH_LEAVES(OAK_LEAVES, 2),
    JUNGLE_LEAVES(OAK_LEAVES, 3),

    //Sand part
    SAND("SAND"),
    RED_SAND(SAND, 1),
    SANDSTONE("SANDSTONE"),
    CHISELED_SANDSTONE(SANDSTONE, 1),
    SMOOTH_SANDSTONE(SANDSTONE, 2),
    SANDSTONE_SLAB(STONE_SLAB, 1),
    DOUBLE_SANDSTONE_SLAB(DOUBLE_STONE_SLAB, 1),
    SMOOTH_DOUBLE_SANDSTONE_SLAB(DOUBLE_STONE_SLAB, 9),
    SANDSTONE_STAIRS("SANDSTONE_STAIRS"),

    //Wool part
    WOOL("WOOL"),
    ORANGE_WOOL(WOOL, 1),
    MAGENTA_WOOL(WOOL, 2),
    LIGHT_BLUE_WOOL(WOOL, 3),
    YELLOW_WOOL(WOOL, 4),
    LIME_WOOL(WOOL, 5),
    PINK_WOOL(WOOL, 6),
    GRAY_WOOL(WOOL, 7),
    LIGHT_GRAY_WOOL(WOOL, 8),
    CYAN_WOOL(WOOL, 9),
    PURPLE_WOOL(WOOL, 10),
    BLUE_WOOL(WOOL, 11),
    BROWN_WOOL(WOOL, 12),
    GREEN_WOOL(WOOL, 13),
    RED_WOOL(WOOL, 14),
    BLACK_WOOL(WOOL, 15),

    //Glass part
    GLASS("GLASS"),
    WHITE_GLASS("STAINED_GLASS"),
    ORANGE_GLASS(WHITE_GLASS, 1),
    MAGENTA_GLASS(WHITE_GLASS, 2),
    LIGHT_BLUE_GLASS(WHITE_GLASS, 3),
    YELLOW_GLASS(WHITE_GLASS, 4),
    LIME_GLASS(WHITE_GLASS, 5),
    PING_GLASS(WHITE_GLASS, 6),
    GRAY_GLASS(WHITE_GLASS, 7),
    LIGHT_GRAY_GLASS(WHITE_GLASS, 8),
    CYAN_GLASS(WHITE_GLASS, 9),
    PURPLE_GLASS(WHITE_GLASS, 10),
    BLUE_GLASS(WHITE_GLASS, 11),
    BROWN_GLASS(WHITE_GLASS, 12),
    GREEN_GLASS(WHITE_GLASS, 13),
    RED_GLASS(WHITE_GLASS, 14),
    BLACK_GLASS(WHITE_GLASS, 15),

    //Water part
    ICE("ICE"),
    CLAY_BLOCK("CLAY"),
    SNOW_BLOCK("SNOW_BLOCK"),
    BRICKS("BRICK"),
    BRICKS_SLAB(STONE_SLAB, 4),
    DOUBLE_BRICKS_SLAB(DOUBLE_STONE_SLAB, 4),
    BRICKS_STAIRS("BRICK_STAIRS"),
    SPONGE("SPONGE"),
    WET_SPONGE(SPONGE, 1),

    //Farming part
    MELON_BLOCK("MELON_BLOCK"),
    PUMPKIN("PUMPKIN"),
    JACK_O_LANTERN("JACK_O_LANTERN"),

    //Redstone part
    DISPENSER("DISPENSER"),
    POWERED_RAIL("POWERED_RAIL"),
    DETECTOR_RAIL("DETECTOR_RAIL"),
    PISTON("PISTON_BASE"),
    STICKY_PISTON("PISTON_STICKY_BASE"),

    //Mobs part
    COBWEB("WEB"),

    //Flowers part
    SHRUB_TALLGRASS("LONG_GRASS"),
    TALLGRASS(SHRUB_TALLGRASS, 1),
    FERN_TALLGRASS(SHRUB_TALLGRASS, 2),
    DEAD_BUSH("DEAD_BUSH"),
    DANDELION("YELLOW_FLOWER"),
    POPPY("RED_ROSE"),
    BLUE_ORCHID(POPPY, 1),
    ALLIUM(POPPY, 2),
    AZURE_BLUET(POPPY, 3),
    RED_TULIP(POPPY, 4),
    ORANGE_TULIP(POPPY, 5),
    WHITE_TULIP(POPPY, 6),
    PINK_TULIP(POPPY, 7),
    OXEYE_DAISY(POPPY, 8),
    BROWN_MUSHROOM("BROWN_MUSHROOM"),
    RED_MUSHROOM("RED_MUSHROOM"),

    //Nether part
    OBSIDIAN("OBSIDIAN"),
    NETHERRACK("NETHERRACK"),
    SOUL_SAND("SOUL_SAND"),
    GLOWSTONE("GLOWSTONE"),
    NETHER_BRICKS("NETHER_BRICK"),
    NETHER_BRICKS_SLAB(STONE_SLAB, 6),
    DOUBLE_NETHER_BRICKS_SLAB(DOUBLE_STONE_SLAB, 6),
    QUARTZ_SLAB(STONE_SLAB, 7),
    DOUBLE_QUARTZ_SLAB(DOUBLE_STONE_SLAB, 7),
    NETHER_BRICKS_STAIRS("NETHER_BRICK_STAIRS"),

    //End part
    END_STONE("ENDER_STONE"),

    //Fluids part
    WATER("WATER"),
    NOT_FLOWING_WATER("STATIONARY_WATER"),
    LAVA("LAVA"),
    NOT_FLOWING_LAVA("STATIONARY_LAVA"),

    //Others part
    GRAVEL("GRAVEL"),
    BOOKSHELF("BOOKSHELF"),
    NOTE_BLOCK("NOTE_BLOCK"),
    AIR("AIR", false),
    BEDROCK("BEDROCK", false),
    BED_BLOCK("BED_BLOCK", false),
    PISTON_HEAD("PISTON_EXTENSION", false),
    PISTON_EXTENSION("PISTON_MOVING_PIECE", false);

    private final Item item;
    private final boolean isAllowed;

    Items(String material) {
        this(material, 0, true);
    }

    Items(String material, boolean isAllowed) {
        this(material, 0, isAllowed);
    }

    Items(Items item, int data) {
        this(item, data, true);
    }

    Items(Items item, int data, boolean isAllowed) {
        this(item.getItem().getMaterial(), data, isAllowed);
    }

    Items(String material, int data, boolean isAllowed) {
        this(new Item(material, data), isAllowed);
    }

    Items(Item item, boolean isAllowed) {
        this.item = item;
        this.isAllowed = isAllowed;
    }

    public Item getItem() {
        return this.item;
    }

    public boolean isAllowed() {
        return this.isAllowed;
    }
}
